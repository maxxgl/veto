/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export interface Options {
  created_at: Generated<string | null>;
  description: string | null;
  genre_id: number | null;
  gps_lat: number | null;
  gps_lng: number | null;
  id: Generated<number | null>;
  name: string;
  rating: number | null;
  updated_at: Generated<string | null>;
}

export interface Players {
  created_at: Generated<string | null>;
  gps_lat: number | null;
  gps_lng: number | null;
  id: Generated<number | null>;
  name: string;
  updated_at: Generated<string | null>;
}

export interface Rounds {
  created_at: Generated<string | null>;
  ended_at: string | null;
  id: Generated<number | null>;
  round_number: number;
  session_id: number;
  started_at: Generated<string | null>;
  status: Generated<string | null>;
}

export interface Sessions {
  created_at: Generated<string | null>;
  date_created: Generated<string | null>;
  gps_lat: number;
  gps_lng: number;
  id: Generated<number | null>;
  owner_id: number;
  updated_at: Generated<string | null>;
  uuid_code: string;
}

export interface Votes {
  id: Generated<number | null>;
  option_id: number;
  player_id: number;
  round_id: number;
  voted_at: Generated<string | null>;
}

export interface DB {
  options: Options;
  players: Players;
  rounds: Rounds;
  sessions: Sessions;
  votes: Votes;
}
